<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=question.title%> | MCQ Practice</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&family=Fira+Code&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a0ca3;
            --success: #4cc9f0;
            --danger: #f72585;
            --warning: #f8961e;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f7fa;
            color: var(--dark);
            line-height: 1.6;
            padding: 2rem;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 1.5rem;
            position: relative;
        }

        .header::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--success), var(--warning), var(--danger));
        }

        .question-title {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .meta-info {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
            flex-wrap: wrap;
        }

        .difficulty {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            text-transform: capitalize;
        }

        .difficulty-easy {
            background-color: rgba(76, 201, 240, 0.2);
            color: #4cc9f0;
        }

        .difficulty-medium {
            background-color: rgba(248, 150, 30, 0.2);
            color: #f8961e;
        }

        .difficulty-hard {
            background-color: rgba(247, 37, 133, 0.2);
            color: #f72585;
        }

        .tag {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            background-color: rgba(23, 24, 24, 0.1);
            border-radius: 20px;
            font-size: 0.8rem;
            color: white;
        }

        .question-body {
            padding: 2rem;
        }

        .question-description {
            font-size: 1.1rem;
            margin-bottom: 2rem;
            white-space: pre-wrap;
        }

        .options-container {
            margin-top: 1.5rem;
        }

        .option {
            padding: 1rem;
            margin-bottom: 0.75rem;
            border: 2px solid #e9ecef;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .option:hover {
            background-color: #f8f9fa;
            border-color: var(--primary);
        }

        .option-letter {
            width: 32px;
            height: 32px;
            background-color: #e9ecef;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            flex-shrink: 0;
        }

        .option-text {
            flex-grow: 1;
        }

        .correct-answer {
            margin-top: 2rem;
            padding: 1rem;
            background-color: rgba(67, 97, 238, 0.1);
            border-radius: var(--border-radius);
            border-left: 4px solid var(--primary);
        }

        .correct-answer-label {
            font-weight: 600;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }

        .correct-answer-value {
            font-family: 'Fira Code', monospace;
            background-color: white;
            padding: 0.5rem;
            border-radius: 4px;
            display: inline-block;
        }

        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }
            
            .question-title {
                font-size: 1.5rem;
            }
            
            .question-body {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="question-title"><%=question.title%></h1>
            <div class="meta-info">
                <span class="difficulty difficulty-<%=question.difficulty.toLowerCase()%>">
                    <%=question.difficulty%>
                </span>
                
                <hr>
                <% if (question.tags) { %>
                    <% question.tags.forEach(tag => { %>
                        <span class="tag"><%= tag.trim() %></span>
                    <% }); %>
                <% } %>
                
            </div>
        </div>
        
        <div class="question-body">
            <div class="question-description">
                <%=question.description%>
            </div>
            
            <div class="options-container">
                <% 
                // Parse options if it's a string, or use directly if it's an array
                const options = typeof question.options === 'string' ? 
                    JSON.parse(question.options) : 
                    question.options || [];
                %>
                
                <% ['A', 'B', 'C', 'D'].forEach((letter, index) => { %>
                    <% if (options && options[index]) { %>
                        <div class="option">
                            <span class="option-letter"><%=letter%></span>
                            <span class="option-text"><%=options[index]%></span>
                        </div>
                    <% } %>
                <% }); %>
            </div>
            
            <% if (question.correctAnswer) { %>
                <div class="correct-answer">
                    <div class="correct-answer-label">Correct Answer:</div>
                    <div class="correct-answer-value"><%=question.correctAnswer%></div>
                </div>
            <% } %>
        </div>
    </div>
</body>
</html>